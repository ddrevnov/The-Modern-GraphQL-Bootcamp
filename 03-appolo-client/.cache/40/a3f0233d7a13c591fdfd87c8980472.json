{"id":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","dependencies":[{"name":"/project/03-appolo-client/package.json","includedInParent":true,"mtime":1542835171955},{"name":"/project/03-appolo-client/node_modules/graphql/package.json","includedInParent":true,"mtime":1542835171063},{"name":"../jsutils/invariant","loc":{"line":9,"column":22},"parent":"/project/03-appolo-client/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/project/03-appolo-client/node_modules/graphql/jsutils/invariant.mjs"},{"name":"./introspectionQuery","loc":{"line":10,"column":38},"parent":"/project/03-appolo-client/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/project/03-appolo-client/node_modules/graphql/utilities/introspectionQuery.mjs"},{"name":"../execution/execute","loc":{"line":11,"column":24},"parent":"/project/03-appolo-client/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/project/03-appolo-client/node_modules/graphql/execution/execute.mjs"},{"name":"../language/parser","loc":{"line":12,"column":22},"parent":"/project/03-appolo-client/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/project/03-appolo-client/node_modules/graphql/language/parser.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant\"));\n\nvar _introspectionQuery = require(\"./introspectionQuery\");\n\nvar _execute = require(\"../execution/execute\");\n\nvar _parser = require(\"../language/parser\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  var queryAST = (0, _parser.parse)((0, _introspectionQuery.getIntrospectionQuery)(options));\n  var result = (0, _execute.execute)(schema, queryAST);\n  !(!result.then && !result.errors && result.data) ? (0, _invariant.default)(0) : void 0;\n  return result.data;\n}","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":10,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":11,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":1,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":14,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":7}},{"name":"introspectionFromSchema","generated":{"line":36,"column":9},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":16}},{"generated":{"line":36,"column":32},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":7}},{"name":"schema","generated":{"line":36,"column":33},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":40}},{"generated":{"line":36,"column":39},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":7}},{"name":"options","generated":{"line":36,"column":41},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":48}},{"generated":{"line":36,"column":48},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":7}},{"generated":{"line":36,"column":50},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":57}},{"generated":{"line":37,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":2}},{"name":"queryAST","generated":{"line":37,"column":6},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":6}},{"generated":{"line":37,"column":14},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":14}},{"generated":{"line":37,"column":17},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":17}},{"generated":{"line":37,"column":36},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":23}},{"name":"options","generated":{"line":37,"column":83},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":45}},{"generated":{"line":37,"column":90},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":23}},{"generated":{"line":37,"column":91},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":17}},{"generated":{"line":37,"column":92},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":24,"column":2}},{"generated":{"line":38,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":2}},{"name":"result","generated":{"line":38,"column":6},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":6}},{"generated":{"line":38,"column":12},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":12}},{"generated":{"line":38,"column":15},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":15}},{"name":"schema","generated":{"line":38,"column":37},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":23}},{"generated":{"line":38,"column":43},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":15}},{"name":"queryAST","generated":{"line":38,"column":45},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":31}},{"generated":{"line":38,"column":53},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":15}},{"generated":{"line":38,"column":54},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":25,"column":2}},{"generated":{"line":39,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":2}},{"generated":{"line":39,"column":4},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":4}},{"name":"result","generated":{"line":39,"column":5},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":5}},{"generated":{"line":39,"column":11},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":11}},{"name":"then","generated":{"line":39,"column":12},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":12}},{"generated":{"line":39,"column":16},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":4}},{"generated":{"line":39,"column":20},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":20}},{"name":"result","generated":{"line":39,"column":21},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":21}},{"generated":{"line":39,"column":27},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":27}},{"name":"errors","generated":{"line":39,"column":28},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":28}},{"generated":{"line":39,"column":34},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":4}},{"name":"result","generated":{"line":39,"column":38},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":38}},{"generated":{"line":39,"column":44},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":44}},{"name":"data","generated":{"line":39,"column":45},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":45}},{"generated":{"line":39,"column":49},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":2}},{"generated":{"line":39,"column":53},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":53}},{"generated":{"line":39,"column":77},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":63}},{"generated":{"line":39,"column":78},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":53}},{"generated":{"line":39,"column":79},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":2}},{"generated":{"line":39,"column":82},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":68}},{"generated":{"line":39,"column":87},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":73}},{"generated":{"line":39,"column":88},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":26,"column":2}},{"generated":{"line":40,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":27,"column":2}},{"name":"result","generated":{"line":40,"column":9},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":27,"column":9}},{"generated":{"line":40,"column":15},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":27,"column":15}},{"name":"data","generated":{"line":40,"column":16},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":27,"column":16}},{"generated":{"line":40,"column":20},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":27,"column":2}},{"generated":{"line":41,"column":0},"source":"../node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":28,"column":1}}],"sources":{"../node_modules/graphql/utilities/introspectionFromSchema.mjs":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport invariant from '../jsutils/invariant';\nimport { getIntrospectionQuery } from './introspectionQuery';\nimport { execute } from '../execution/execute';\nimport { parse } from '../language/parser';\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nexport function introspectionFromSchema(schema, options) {\n  var queryAST = parse(getIntrospectionQuery(options));\n  var result = execute(schema, queryAST);\n  !(!result.then && !result.errors && result.data) ? invariant(0) : void 0;\n  return result.data;\n}"},"lineCount":null}},"hash":"05b3e50a30b0954eced7be807277a319","cacheData":{"env":{}}}