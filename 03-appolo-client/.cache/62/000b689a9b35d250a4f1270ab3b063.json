{"id":"../node_modules/optimism/lib/entry.js","dependencies":[{"name":"/project/03-appolo-client/package.json","includedInParent":true,"mtime":1542835171955},{"name":"/project/03-appolo-client/node_modules/optimism/package.json","includedInParent":true,"mtime":1542835171099},{"name":"./local.js","loc":{"line":3,"column":23},"parent":"/project/03-appolo-client/node_modules/optimism/lib/entry.js","resolved":"/project/03-appolo-client/node_modules/optimism/lib/local.js"}],"generated":{"js":"\"use strict\";\n\nvar getLocal = require(\"./local.js\").get;\nvar UNKNOWN_VALUE = Object.create(null);\nvar emptySetPool = [];\nvar entryPool = [];\n\n// Don't let the emptySetPool or entryPool grow larger than this size,\n// since unconstrained pool growth could lead to memory leaks.\nexports.POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition, optionalMessage) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\nfunction Entry(fn, key, args) {\n  this.parents = new Set;\n  this.childValues = new Map;\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  this.dirtyChildren = null;\n\n  reset(this, fn, key, args);\n\n  ++Entry.count;\n}\n\nEntry.count = 0;\n\nfunction reset(entry, fn, key, args) {\n  entry.fn = fn;\n  entry.key = key;\n  entry.args = args;\n  entry.value = UNKNOWN_VALUE;\n  entry.dirty = true;\n  entry.subscribe = null;\n  entry.unsubscribe = null;\n  entry.recomputing = false;\n  // Optional callback that will be invoked when entry.parents becomes\n  // empty. The Entry object is given as the first parameter. If the\n  // callback returns true, then this entry can be removed from the graph\n  // and safely recycled into the entryPool.\n  entry.reportOrphan = null;\n}\n\nEntry.acquire = function (fn, key, args) {\n  var entry = entryPool.pop();\n  if (entry) {\n    reset(entry, fn, key, args);\n    return entry;\n  }\n  return new Entry(fn, key, args);\n};\n\nfunction release(entry) {\n  assert(entry.parents.size === 0);\n  assert(entry.childValues.size === 0);\n  assert(entry.dirtyChildren === null);\n  if (entryPool.length < exports.POOL_TARGET_SIZE) {\n    entryPool.push(entry);\n  }\n}\n\nexports.Entry = Entry;\n\nvar Ep = Entry.prototype;\n\n// The public API of Entry objects consists of the Entry constructor,\n// along with the recompute, setDirty, and dispose methods.\n\nEp.recompute = function recompute() {\n  if (! rememberParent(this) &&\n      maybeReportOrphan(this)) {\n    // The recipient of the entry.reportOrphan callback decided to dispose\n    // of this orphan entry by calling entry.dispos(), which recycles it\n    // into the entryPool, so we don't need to (and should not) proceed\n    // with the recomputation.\n    return;\n  }\n\n  return recomputeIfDirty(this);\n};\n\n// If the given entry has a reportOrphan method, and no remaining parents,\n// call entry.reportOrphan and return true iff it returns true. The\n// reportOrphan function should return true to indicate entry.dispose()\n// has been called, and the entry has been removed from any other caches\n// (see index.js for the only current example).\nfunction maybeReportOrphan(entry) {\n  var report = entry.reportOrphan;\n  return typeof report === \"function\" &&\n    entry.parents.size === 0 &&\n    report(entry) === true;\n}\n\nEp.setDirty = function setDirty() {\n  if (this.dirty) return;\n  this.dirty = true;\n  this.value = UNKNOWN_VALUE;\n  reportDirty(this);\n  // We can go ahead and unsubscribe here, since any further dirty\n  // notifications we receive will be redundant, and unsubscribing may\n  // free up some resources, e.g. file watchers.\n  unsubscribe(this);\n};\n\nEp.dispose = function dispose() {\n  var entry = this;\n  forgetChildren(entry).forEach(maybeReportOrphan);\n  unsubscribe(entry);\n\n  // Because this entry has been kicked out of the cache (in index.js),\n  // we've lost the ability to find out if/when this entry becomes dirty,\n  // whether that happens through a subscription, because of a direct call\n  // to entry.setDirty(), or because one of its children becomes dirty.\n  // Because of this loss of future information, we have to assume the\n  // worst (that this entry might have become dirty very soon), so we must\n  // immediately mark this entry's parents as dirty. Normally we could\n  // just call entry.setDirty() rather than calling parent.setDirty() for\n  // each parent, but that would leave this entry in parent.childValues\n  // and parent.dirtyChildren, which would prevent the child from being\n  // truly forgotten.\n  entry.parents.forEach(function (parent) {\n    parent.setDirty();\n    forgetChild(parent, entry);\n  });\n\n  // Since this entry has no parents and no children anymore, and the\n  // caller of Entry#dispose has indicated that entry.value no longer\n  // matters, we can safely recycle this Entry object for later use.\n  release(entry);\n};\n\nfunction setClean(entry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(entry) {\n  entry.parents.forEach(function (parent) {\n    reportDirtyChild(parent, entry);\n  });\n}\n\nfunction reportClean(entry) {\n  entry.parents.forEach(function (parent) {\n    reportCleanChild(parent, entry);\n  });\n}\n\nfunction mightBeDirty(entry) {\n  return entry.dirty ||\n    (entry.dirtyChildren &&\n     entry.dirtyChildren.size);\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(entry, child) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(entry.childValues.has(child));\n  assert(mightBeDirty(child));\n\n  if (! entry.dirtyChildren) {\n    entry.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (entry.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  entry.dirtyChildren.add(child);\n  reportDirty(entry);\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(entry, child) {\n  var cv = entry.childValues;\n\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(cv.has(child));\n  assert(! mightBeDirty(child));\n\n  var childValue = cv.get(child);\n  if (childValue === UNKNOWN_VALUE) {\n    cv.set(child, child.value);\n  } else if (childValue !== child.value) {\n    entry.setDirty();\n  }\n\n  removeDirtyChild(entry, child);\n\n  if (mightBeDirty(entry)) {\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction removeDirtyChild(entry, child) {\n  var dc = entry.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < exports.POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      entry.dirtyChildren = null;\n    }\n  }\n}\n\nfunction rememberParent(entry) {\n  var local = getLocal();\n  var parent = local.currentParentEntry;\n  if (parent) {\n    entry.parents.add(parent);\n\n    if (! parent.childValues.has(entry)) {\n      parent.childValues.set(entry, UNKNOWN_VALUE);\n    }\n\n    if (mightBeDirty(entry)) {\n      reportDirtyChild(parent, entry);\n    } else {\n      reportCleanChild(parent, entry);\n    }\n\n    return parent;\n  }\n}\n\n// This is the most important method of the Entry API, because it\n// determines whether the cached entry.value can be returned immediately,\n// or must be recomputed. The overall performance of the caching system\n// depends on the truth of the following observations: (1) this.dirty is\n// usually false, (2) this.dirtyChildren is usually null/empty, and thus\n// (3) this.value is usally returned very quickly, without recomputation.\nfunction recomputeIfDirty(entry) {\n  if (entry.dirty) {\n    // If this Entry is explicitly dirty because someone called\n    // entry.setDirty(), recompute.\n    return reallyRecompute(entry);\n  }\n\n  if (mightBeDirty(entry)) {\n    // Get fresh values for any dirty children, and if those values\n    // disagree with this.childValues, mark this Entry explicitly dirty.\n    entry.dirtyChildren.forEach(function (child) {\n      assert(entry.childValues.has(child));\n      try {\n        recomputeIfDirty(child);\n      } catch (e) {\n        entry.setDirty();\n      }\n    });\n\n    if (entry.dirty) {\n      // If this Entry has become explicitly dirty after comparing the fresh\n      // values of its dirty children against this.childValues, recompute.\n      return reallyRecompute(entry);\n    }\n  }\n\n  assert(entry.value !== UNKNOWN_VALUE);\n\n  return entry.value;\n}\n\nfunction reallyRecompute(entry) {\n  assert(! entry.recomputing, \"already recomputing\");\n  entry.recomputing = true;\n\n  // Since this recomputation is likely to re-remember some of this\n  // entry's children, we forget our children here but do not call\n  // maybeReportOrphan until after the recomputation finishes.\n  var originalChildren = forgetChildren(entry);\n\n  var local = getLocal();\n  var parent = local.currentParentEntry;\n  local.currentParentEntry = entry;\n\n  var threw = true;\n  try {\n    entry.value = entry.fn.apply(null, entry.args);\n    threw = false;\n\n  } finally {\n    entry.recomputing = false;\n\n    assert(local.currentParentEntry === entry);\n    local.currentParentEntry = parent;\n\n    if (threw || ! subscribe(entry)) {\n      // Mark this Entry dirty if entry.fn threw or we failed to\n      // resubscribe. This is important because, if we have a subscribe\n      // function and it failed, then we're going to miss important\n      // notifications about the potential dirtiness of entry.value.\n      entry.setDirty();\n    } else {\n      // If we successfully recomputed entry.value and did not fail to\n      // (re)subscribe, then this Entry is no longer explicitly dirty.\n      setClean(entry);\n    }\n  }\n\n  // Now that we've had a chance to re-remember any children that were\n  // involved in the recomputation, we can safely report any orphan\n  // children that remain.\n  originalChildren.forEach(maybeReportOrphan);\n\n  return entry.value;\n}\n\nvar reusableEmptyArray = [];\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(entry) {\n  var children = reusableEmptyArray;\n\n  if (entry.childValues.size > 0) {\n    children = [];\n    entry.childValues.forEach(function (value, child) {\n      forgetChild(entry, child);\n      children.push(child);\n    });\n  }\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefor must have been reset to null.\n  assert(entry.dirtyChildren === null);\n\n  return children;\n}\n\nfunction forgetChild(entry, child) {\n  child.parents.delete(entry);\n  entry.childValues.delete(child);\n  removeDirtyChild(entry, child);\n}\n\nfunction subscribe(entry) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      unsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, entry.args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n\nfunction unsubscribe(entry) {\n  var unsub = entry.unsubscribe;\n  if (typeof unsub === \"function\") {\n    entry.unsubscribe = null;\n    unsub();\n  }\n}\n","map":{"mappings":[{"source":"../node_modules/optimism/lib/entry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/optimism/lib/entry.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}}],"sources":{"../node_modules/optimism/lib/entry.js":"\"use strict\";\n\nvar getLocal = require(\"./local.js\").get;\nvar UNKNOWN_VALUE = Object.create(null);\nvar emptySetPool = [];\nvar entryPool = [];\n\n// Don't let the emptySetPool or entryPool grow larger than this size,\n// since unconstrained pool growth could lead to memory leaks.\nexports.POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition, optionalMessage) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\nfunction Entry(fn, key, args) {\n  this.parents = new Set;\n  this.childValues = new Map;\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  this.dirtyChildren = null;\n\n  reset(this, fn, key, args);\n\n  ++Entry.count;\n}\n\nEntry.count = 0;\n\nfunction reset(entry, fn, key, args) {\n  entry.fn = fn;\n  entry.key = key;\n  entry.args = args;\n  entry.value = UNKNOWN_VALUE;\n  entry.dirty = true;\n  entry.subscribe = null;\n  entry.unsubscribe = null;\n  entry.recomputing = false;\n  // Optional callback that will be invoked when entry.parents becomes\n  // empty. The Entry object is given as the first parameter. If the\n  // callback returns true, then this entry can be removed from the graph\n  // and safely recycled into the entryPool.\n  entry.reportOrphan = null;\n}\n\nEntry.acquire = function (fn, key, args) {\n  var entry = entryPool.pop();\n  if (entry) {\n    reset(entry, fn, key, args);\n    return entry;\n  }\n  return new Entry(fn, key, args);\n};\n\nfunction release(entry) {\n  assert(entry.parents.size === 0);\n  assert(entry.childValues.size === 0);\n  assert(entry.dirtyChildren === null);\n  if (entryPool.length < exports.POOL_TARGET_SIZE) {\n    entryPool.push(entry);\n  }\n}\n\nexports.Entry = Entry;\n\nvar Ep = Entry.prototype;\n\n// The public API of Entry objects consists of the Entry constructor,\n// along with the recompute, setDirty, and dispose methods.\n\nEp.recompute = function recompute() {\n  if (! rememberParent(this) &&\n      maybeReportOrphan(this)) {\n    // The recipient of the entry.reportOrphan callback decided to dispose\n    // of this orphan entry by calling entry.dispos(), which recycles it\n    // into the entryPool, so we don't need to (and should not) proceed\n    // with the recomputation.\n    return;\n  }\n\n  return recomputeIfDirty(this);\n};\n\n// If the given entry has a reportOrphan method, and no remaining parents,\n// call entry.reportOrphan and return true iff it returns true. The\n// reportOrphan function should return true to indicate entry.dispose()\n// has been called, and the entry has been removed from any other caches\n// (see index.js for the only current example).\nfunction maybeReportOrphan(entry) {\n  var report = entry.reportOrphan;\n  return typeof report === \"function\" &&\n    entry.parents.size === 0 &&\n    report(entry) === true;\n}\n\nEp.setDirty = function setDirty() {\n  if (this.dirty) return;\n  this.dirty = true;\n  this.value = UNKNOWN_VALUE;\n  reportDirty(this);\n  // We can go ahead and unsubscribe here, since any further dirty\n  // notifications we receive will be redundant, and unsubscribing may\n  // free up some resources, e.g. file watchers.\n  unsubscribe(this);\n};\n\nEp.dispose = function dispose() {\n  var entry = this;\n  forgetChildren(entry).forEach(maybeReportOrphan);\n  unsubscribe(entry);\n\n  // Because this entry has been kicked out of the cache (in index.js),\n  // we've lost the ability to find out if/when this entry becomes dirty,\n  // whether that happens through a subscription, because of a direct call\n  // to entry.setDirty(), or because one of its children becomes dirty.\n  // Because of this loss of future information, we have to assume the\n  // worst (that this entry might have become dirty very soon), so we must\n  // immediately mark this entry's parents as dirty. Normally we could\n  // just call entry.setDirty() rather than calling parent.setDirty() for\n  // each parent, but that would leave this entry in parent.childValues\n  // and parent.dirtyChildren, which would prevent the child from being\n  // truly forgotten.\n  entry.parents.forEach(function (parent) {\n    parent.setDirty();\n    forgetChild(parent, entry);\n  });\n\n  // Since this entry has no parents and no children anymore, and the\n  // caller of Entry#dispose has indicated that entry.value no longer\n  // matters, we can safely recycle this Entry object for later use.\n  release(entry);\n};\n\nfunction setClean(entry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(entry) {\n  entry.parents.forEach(function (parent) {\n    reportDirtyChild(parent, entry);\n  });\n}\n\nfunction reportClean(entry) {\n  entry.parents.forEach(function (parent) {\n    reportCleanChild(parent, entry);\n  });\n}\n\nfunction mightBeDirty(entry) {\n  return entry.dirty ||\n    (entry.dirtyChildren &&\n     entry.dirtyChildren.size);\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(entry, child) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(entry.childValues.has(child));\n  assert(mightBeDirty(child));\n\n  if (! entry.dirtyChildren) {\n    entry.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (entry.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  entry.dirtyChildren.add(child);\n  reportDirty(entry);\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(entry, child) {\n  var cv = entry.childValues;\n\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(cv.has(child));\n  assert(! mightBeDirty(child));\n\n  var childValue = cv.get(child);\n  if (childValue === UNKNOWN_VALUE) {\n    cv.set(child, child.value);\n  } else if (childValue !== child.value) {\n    entry.setDirty();\n  }\n\n  removeDirtyChild(entry, child);\n\n  if (mightBeDirty(entry)) {\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction removeDirtyChild(entry, child) {\n  var dc = entry.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < exports.POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      entry.dirtyChildren = null;\n    }\n  }\n}\n\nfunction rememberParent(entry) {\n  var local = getLocal();\n  var parent = local.currentParentEntry;\n  if (parent) {\n    entry.parents.add(parent);\n\n    if (! parent.childValues.has(entry)) {\n      parent.childValues.set(entry, UNKNOWN_VALUE);\n    }\n\n    if (mightBeDirty(entry)) {\n      reportDirtyChild(parent, entry);\n    } else {\n      reportCleanChild(parent, entry);\n    }\n\n    return parent;\n  }\n}\n\n// This is the most important method of the Entry API, because it\n// determines whether the cached entry.value can be returned immediately,\n// or must be recomputed. The overall performance of the caching system\n// depends on the truth of the following observations: (1) this.dirty is\n// usually false, (2) this.dirtyChildren is usually null/empty, and thus\n// (3) this.value is usally returned very quickly, without recomputation.\nfunction recomputeIfDirty(entry) {\n  if (entry.dirty) {\n    // If this Entry is explicitly dirty because someone called\n    // entry.setDirty(), recompute.\n    return reallyRecompute(entry);\n  }\n\n  if (mightBeDirty(entry)) {\n    // Get fresh values for any dirty children, and if those values\n    // disagree with this.childValues, mark this Entry explicitly dirty.\n    entry.dirtyChildren.forEach(function (child) {\n      assert(entry.childValues.has(child));\n      try {\n        recomputeIfDirty(child);\n      } catch (e) {\n        entry.setDirty();\n      }\n    });\n\n    if (entry.dirty) {\n      // If this Entry has become explicitly dirty after comparing the fresh\n      // values of its dirty children against this.childValues, recompute.\n      return reallyRecompute(entry);\n    }\n  }\n\n  assert(entry.value !== UNKNOWN_VALUE);\n\n  return entry.value;\n}\n\nfunction reallyRecompute(entry) {\n  assert(! entry.recomputing, \"already recomputing\");\n  entry.recomputing = true;\n\n  // Since this recomputation is likely to re-remember some of this\n  // entry's children, we forget our children here but do not call\n  // maybeReportOrphan until after the recomputation finishes.\n  var originalChildren = forgetChildren(entry);\n\n  var local = getLocal();\n  var parent = local.currentParentEntry;\n  local.currentParentEntry = entry;\n\n  var threw = true;\n  try {\n    entry.value = entry.fn.apply(null, entry.args);\n    threw = false;\n\n  } finally {\n    entry.recomputing = false;\n\n    assert(local.currentParentEntry === entry);\n    local.currentParentEntry = parent;\n\n    if (threw || ! subscribe(entry)) {\n      // Mark this Entry dirty if entry.fn threw or we failed to\n      // resubscribe. This is important because, if we have a subscribe\n      // function and it failed, then we're going to miss important\n      // notifications about the potential dirtiness of entry.value.\n      entry.setDirty();\n    } else {\n      // If we successfully recomputed entry.value and did not fail to\n      // (re)subscribe, then this Entry is no longer explicitly dirty.\n      setClean(entry);\n    }\n  }\n\n  // Now that we've had a chance to re-remember any children that were\n  // involved in the recomputation, we can safely report any orphan\n  // children that remain.\n  originalChildren.forEach(maybeReportOrphan);\n\n  return entry.value;\n}\n\nvar reusableEmptyArray = [];\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(entry) {\n  var children = reusableEmptyArray;\n\n  if (entry.childValues.size > 0) {\n    children = [];\n    entry.childValues.forEach(function (value, child) {\n      forgetChild(entry, child);\n      children.push(child);\n    });\n  }\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefor must have been reset to null.\n  assert(entry.dirtyChildren === null);\n\n  return children;\n}\n\nfunction forgetChild(entry, child) {\n  child.parents.delete(entry);\n  entry.childValues.delete(child);\n  removeDirtyChild(entry, child);\n}\n\nfunction subscribe(entry) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      unsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, entry.args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n\nfunction unsubscribe(entry) {\n  var unsub = entry.unsubscribe;\n  if (typeof unsub === \"function\") {\n    entry.unsubscribe = null;\n    unsub();\n  }\n}\n"},"lineCount":386}},"hash":"8eb3d262b7b37ba909778ad42e522199","cacheData":{"env":{}}}